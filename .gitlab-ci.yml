stages:
  - terraform
  - connect-to-cluster
  - set-up-cluster
  - workers-join-cluster
  - destroy

image: 
  name: hashicorp/terraform
  entrypoint: [""]

variables:
  TF_LOG: DEBUG
  ENCODED_ID_ED25519: $ENCODED_ID_ED25519
  ID_ED25519_pub: $ID_ED25519_PUB
  ACCESS_TOKEN: $CI_ACCESS_TOKEN_2
  AWS_CREDENTIALS: $AWS_CREDENTIALS

terraform-job:
  stage: terraform
  script:
    - apk add --no-cache jq
    - mkdir -p ~/.ssh
    - echo "$ENCODED_ID_ED25519" | base64 -d > ~/.ssh/id_ed25519
    - echo "$ID_ED25519_pub" > ~/.ssh/id_ed25519.pub
    - chmod 600 ~/.ssh/id_ed25519
    - mkdir -p ~/.aws
    - echo "$AWS_CREDENTIALS" > ~/.aws/credentials
    - cd terraform
    - export AWS_PROFILE=default
    - terraform init
    - terraform apply -auto-approve
  artifacts:
    paths:
      - terraform/terraform.tfstate
  only:
    - main
  when: manual 

connect-to-cluster-job:
  stage: connect-to-cluster
  script:
    - apk add --no-cache curl jq kubectl
    - mkdir -p ~/.ssh
    - echo "$ENCODED_ID_ED25519" | base64 -d > ~/.ssh/id_ed25519
    - echo "$ID_ED25519_pub" > ~/.ssh/id_ed25519.pub
    - chmod 400 ~/.ssh/id_ed25519
    - cd terraform
    - terraform init
    - terraform show -json > terraform_output.json
    - jq -r '.values.root_module.resources[] | select(.address == "aws_instance.ec2_k8s_master") | .values.public_ip' terraform_output.json > cluster_ip.txt
    - cat cluster_ip.txt
    - |
      if [ ! -s cluster_ip.txt ]; then
        echo "❌ Error: cluster_ip.txt is empty! Terraform output might be incorrect."
        exit 1
      fi
    - jq -r '.outputs.ec2_k8s_workers_public_ips.value[]' terraform.tfstate > worker_ips.txt
    - cat worker_ips.txt
    - |
      if [ ! -s worker_ips.txt ]; then
        echo "❌ Error: worker_ips.txt is empty! Terraform output might be incorrect."
        exit 1
      fi
    - jq -r '.outputs.ec2_nfs_server_private_ip.value' terraform.tfstate > nfs_server_ip.txt
    - cat nfs_server_ip.txt
    - |
      if [ ! -s nfs_server_ip.txt ]; then
        echo "❌ Error: nfs_server_ip.txt is empty! Terraform output might be incorrect."
        exit 1
      fi   
    - echo "pushing variables to gitlab"
    - |
      curl --request PUT --header "PRIVATE-TOKEN: $CI_ACCESS_TOKEN_FULL" --header "Content-Type: application/json" --data "{\"key\": \"NFS_SERVER_IP\", \"value\": \"$(cat nfs_server_ip.txt)\"}" "https://gitlab.com/api/v4/groups/$GROUP_ID/variables/NFS_SERVER_IP"
    - |
      curl --request PUT --header "PRIVATE-TOKEN: $CI_ACCESS_TOKEN_FULL" --header "Content-Type: application/json" --data "{\"key\": \"CLUSTER_IP\", \"value\": \"$(cat cluster_ip.txt)\"}" "https://gitlab.com/api/v4/groups/$GROUP_ID/variables/CLUSTER_IP"
    - |
      curl --request PUT --header "PRIVATE-TOKEN: $CI_ACCESS_TOKEN_FULL" --header "Content-Type: application/json" --data "{\"key\": \"WORKER_IPS\", \"value\": \"$(tr '\n' ' ' < worker_ips.txt | sed 's/ $//')\"}" "https://gitlab.com/api/v4/groups/$GROUP_ID/variables/WORKER_IPS"   # - cd ..  
  dependencies:
    - terraform-job
  artifacts:
    paths:
      - terraform/terraform.tfstate
      - terraform/cluster_ip.txt
      - terraform/worker_ips.txt
      - terraform/nfs_server_ip.txt
  only:
    - main
  needs: ["terraform-job"]

set-up-cluster-job:
  stage: set-up-cluster
  image:
    name: ghcr.io/helmfile/helmfile:latest
    entrypoint: [""] # Override the default entrypoint
  script:
    - apk add --no-cache curl jq kubectl
    - cd helm
    - echo "Deploying to k8s ..."
    # Move the config file to the helm directory to connecto to AWS kubectl
    - mkdir -p /helm/.kube
    - mkdir -p ~/.ssh
    - echo "$ENCODED_ID_ED25519" | base64 -d > ~/.ssh/id_ed25519
    - echo "$ID_ED25519_pub" > ~/.ssh/id_ed25519.pub
    - chmod 400 ~/.ssh/id_ed25519
    - scp -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=ERROR -o IdentitiesOnly=yes -o User=ubuntu ubuntu@$CLUSTER_IP:~/.kube/config /helm/.kube/config
    - cat /helm/.kube/config
    - echo "Modifying the kubeconfig file to use the master node's IP address..."
    # delete line 4
    - sed -i '4d' ~/.kube/config
    # replace the server address with the master node's IP address and disable tls verification
    - |
      sed -i "s/server: https:\/\/.*:6443/server: https:\/\/$(cat ../terraform/cluster_ip.txt):6443\n    insecure-skip-tls-verify: true/g" ~/.kube/config
    - cat ~/.kube/config
    - echo "Checking nodes are available ..."
    - kubectl get nodes
    - echo "Helm initial config ..."
    - helm plugin list | grep -q 'diff' || helm plugin install https://github.com/databus23/helm-diff
    - helm repo add traefik https://traefik.github.io/charts
    - helm list -q | grep -q 'traefik' || helm install traefik traefik/traefik --set installCRDs=true
    - helm repo add signoz https://charts.signoz.io
    - helm list -q | grep -q 'signoz' || helm install signoz signoz/signoz --set installCRDs=true --values charts/values-signoz.yaml
  dependencies:
    - connect-to-cluster-job
  when: manual
  artifacts:
    paths:
      - terraform/terraform.tfstate
      - terraform/cluster_ip.txt
      - terraform/worker_ips.txt
  only:
    - main
  needs: ["connect-to-cluster-job"]

# workers-join-cluster-job:
#   stage: workers-join-cluster
#   image: alpine:latest
#   script:
#     - apk add --no-cache bash
#     - mkdir -p ~/.ssh
#     - echo "$ENCODED_ID_ED25519" | base64 -d > ~/.ssh/id_ed25519
#     - echo "$ID_ED25519_pub" > ~/.ssh/id_ed25519.pub
#     - chmod 400 ~/.ssh/id_ed25519
#     - echo "Joining workers to cluster..."
#     - chmod u+x ./init.sh
#     - tr '\n' ' ' < terraform/worker_ips.txt | sed 's/ $//' > terraform/worker_ips_transformed.txt
#     - ./init.sh terraform/cluster_ip.txt terraform/worker_ips_transformed.txt
#     - echo "Workers joined successfully!"
#   dependencies:
#     - set-up-cluster-job
#   artifacts:
#     paths:
#       - terraform/terraform.tfstate
#       - terraform/cluster_ip.txt
#       - terraform/worker_ips.txt
#   when: delayed
#   start_in: 1 minutes
#   only:
#     - main
#   needs: ["set-up-cluster-job"]

terraform-destroy-job:
  stage: destroy
  script:
    - apk add --no-cache jq
    - mkdir -p ~/.ssh
    - echo "$ENCODED_ID_ED25519" | base64 -d > ~/.ssh/id_ed25519
    - echo "$ID_ED25519_pub" > ~/.ssh/id_ed25519.pub
    - chmod 600 ~/.ssh/id_ed25519
    - mkdir -p ~/.aws
    - echo "$AWS_CREDENTIALS" > ~/.aws/credentials    
    - cd terraform
    - export AWS_PROFILE=default
    - terraform init
    - terraform destroy -auto-approve
  dependencies:
    - terraform-job
  artifacts:
    paths:
      - terraform/terraform.tfstate
  only:
    - main
  when: manual

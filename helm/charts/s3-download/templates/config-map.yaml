apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.configMapName }}
  namespace: {{ .Values.namespace }}
data:
  # Este es el principal, manda resultados al orquestador
  KAFKA_BROKERS_SER: {{ .Values.kafkaqueue.producerBrokers }}
  KAFKA_USERNAME_SER: {{ .Values.kafkaqueue.username }}
  KAFKA_PASSWORD_SER: {{ .Values.kafkaqueue.password }}
  KAFKA_CLIENT_ID_SER_PREFIX: {{ .Values.stepResultQueue.clientId }}
  KAFKA_TOPIC_SER: {{ .Values.stepResultQueue.topic }}

  # Recibe las cosas del otro. Scheduler To Agent
  KAFKA_BROKERS_STA: {{ .Values.kafkaqueue.consumerBrokers }}
  KAFKA_USERNAME_STA: {{ .Values.kafkaqueue.username }}
  KAFKA_PASSWORD_STA: {{ .Values.kafkaqueue.password }}
  KAFKA_CLIENT_ID_STA_PREFIX: {{ .Values.schedulerToAgent.clientId }}
  KAFKA_GROUP_ID_STA: {{ .Values.schedulerToAgent.groupId }}
  KAFKA_TOPIC_STA: {{ .Values.schedulerToAgent.topic }}


  # Info a mandarle al Scheduler
  TASK_SERVICE_URL: "http://{{ .Values.taskservice.service.name }}.{{ .Values.taskservice.namespace }}.svc.cluster.local:{{ .Values.taskservice.service.port }}/task-agents/{{ .Values.agent.name }}"
  TASK_NAME: {{ .Values.agent.name }}
  PARAM_NAMES: "{{ .Values.agent.paramNames | join "," }}"
  PARAM_TYPES: "{{ .Values.agent.paramTypes | join "," }}"



  HEALTHCHECK_PORT: "8500"
  AGENT_URL: {{ .Values.agent.url }}
  NFS_PATH: {{ .Values.nfs.path }}

